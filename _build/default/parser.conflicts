
** Conflict (shift/reduce) in state 13.
** Token involved: PLUS
** This state is reached from prog after reading:

list(SEMICOLON) expr PLUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
list(SEMICOLON) list(decla) EOF 
                decla list(decla) 
                expr nonempty_list(SEMICOLON) 
                (?)

** In state 13, looking ahead at PLUS, shifting is permitted
** because of the following sub-derivation:

expr PLUS expr 
          expr . PLUS expr 

** In state 13, looking ahead at PLUS, reducing production
** expr -> expr PLUS expr
** is permitted because of the following sub-derivation:

expr PLUS expr // lookahead token appears
expr PLUS expr . 
